/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.1.x                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters |-geometryScaling-|;

$$ x0=-inXLength
$$ x1=0
$$ x2=outStart
$$ x3=x2+outSize
$$ x4=x3+afterOut

$$ y0=-outDepth
$$ y1=0
$$ y2=inY
$$ y3=y2+channelH
$$ y4=y3+overInlet
$$ yh1=y2+hIn
$$ yh2=y3+hIn
$$ x0h=x0+hIn*float(y3-y2)/(x1-x0)

$$ z0=0
$$ z1=thickness

vertices
(
  (|-x1-| |-y1-| |-z0-|)
  (|-x1-| |-y1-| |-z1-|)
  (|-x2-| |-y1-| |-z0-|)
  (|-x2-| |-y1-| |-z1-|)
  (|-x1-| |-y2-| |-z0-|)
  (|-x1-| |-y2-| |-z1-|)
  (|-x2-| |-y2-| |-z0-|)
  (|-x2-| |-y2-| |-z1-|)
  (|-x1-| |-y3-| |-z0-|)
  (|-x1-| |-y3-| |-z1-|)
  (|-x2-| |-y3-| |-z0-|)
  (|-x2-| |-y3-| |-z1-|)
  (|-x1-| |-y4-| |-z0-|)
  (|-x1-| |-y4-| |-z1-|)
  (|-x2-| |-y4-| |-z0-|)
  (|-x2-| |-y4-| |-z1-|)
  (|-x0-| |-yh1-| |-z0-|)
  (|-x0-| |-yh1-| |-z1-|)
  (|-x0h-| |-yh2-| |-z0-|)
  (|-x0h-| |-yh2-| |-z1-|)
  (|-x3-| |-y1-| |-z0-|)
  (|-x3-| |-y1-| |-z1-|)
  (|-x3-| |-y2-| |-z0-|)
  (|-x3-| |-y2-| |-z1-|)
  (|-x3-| |-y3-| |-z0-|)
  (|-x3-| |-y3-| |-z1-|)
  (|-x3-| |-y4-| |-z0-|)
  (|-x3-| |-y4-| |-z1-|)
  (|-x2-| |-y0-| |-z0-|)
  (|-x2-| |-y0-| |-z1-|)
  (|-x3-| |-y0-| |-z0-|)
  (|-x3-| |-y0-| |-z1-|)
  (|-x4-| |-y1-| |-z0-|)
  (|-x4-| |-y1-| |-z1-|)
  (|-x4-| |-y2-| |-z0-|)
  (|-x4-| |-y2-| |-z1-|)
  (|-x4-| |-y3-| |-z0-|)
  (|-x4-| |-y3-| |-z1-|)
  (|-x4-| |-y4-| |-z0-|)
  (|-x4-| |-y4-| |-z1-|)
);

$$ nx0=int(ceil((x1-x0)/dx))
$$ nx1=int(ceil((x2-x1)/dx))
$$ nx2=int(ceil((x3-x2)/dx))
$$ nx3=int(ceil((x4-x3)/dx))

$$ ny0=int(ceil((y1-y0)/dx))
$$ ny1=int(ceil((y2-y1)/dx))
$$ ny2=int(ceil((y3-y2)/dx))
$$ ny3=int(ceil((y4-y3)/dx))

blocks
(
    hex (0 1 3 2 4 5 7 6) (1 |-nx1-| |-ny1-|) simpleGrading (1 1 1)
    hex (4 5 7 6 8 9 11 10) (1 |-nx1-| |-ny2-|) simpleGrading (1 1 1)
    hex (8 9 11 10 12 13 15 14) (1 |-nx1-| |-ny3-|) simpleGrading (1 1 1)
    hex (16 17 5 4 18 19 9 8) (1 |-nx0-| |-ny2-|) simpleGrading (1 1 1)
    hex (2 3 21 20 6 7 23 22) (1 |-nx2-| |-ny1-|) simpleGrading (1 1 1)
    hex (28 29 31 30 2 3 21 20) (1 |-nx2-| |-ny2-|) simpleGrading (1 1 1)
    hex (6 7 23 22 10 11 25 24) (1 |-nx2-| |-ny2-|) simpleGrading (1 1 1)
    hex (10 11 25 24 14 15 27 26) (1 |-nx2-| |-ny3-|) simpleGrading (1 1 1)
    hex (20 21 33 32 22 23 35 34) (1 |-nx3-| |-ny1-|) simpleGrading (1 1 1)
    hex (22 23 35 34 24 25 37 36) (1 |-nx3-| |-ny2-|) simpleGrading (1 1 1)
    hex (24 25 37 36 26 27 39 38) (1 |-nx3-| |-ny3-|) simpleGrading (1 1 1)
);

edges
(
);

boundary
(
    wall
    {
        type wall;
        faces
        (
	(0 1 3 2)
	(0 1 5 4)
	(8 9 13 12)
	(16 17 5 4)
	(18 19 9 8)
	(2 3 29 28)
          (20 21 31 30)
	(20 21 33 32)
          (32 33 35 34)
	(34 35 37 36)
	(36 37 39 38)
        );
    }
    atmosphere
    {
        type patch;
        faces
        (
	(12 13 15 14)
	(14 15 27 26)
	(26 27 39 38)
        );
    }
    inlet
    {
        type patch;
        faces
        (
	(18 19 17 16)
        );
    }
    outlet
    {
        type patch;
        faces
        (
	(28 29 31 30)
        );
    }
);

mergePatchPairs
(
);

// ************************************************************************* //
